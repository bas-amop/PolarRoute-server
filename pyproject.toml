[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "polarrouteserver"
authors = [
  {name = "David Wilby", email = "dalby@bas.ac.uk"},
]
description = "Backend server for serving PolarRoute and MeshiPhi assets and managing their calcuation using Django & Celery."
readme = "README.md"
license = {file = "LICENSE"}
version = "0.1.6"
requires-python = ">= 3.9"
dependencies = [
    "celery",
    "Django",
    "django-celery-beat",
    "django-celery-results",
    "django-cors-headers",
    "django-rest-framework",
    "haversine",
    "polar-route==1.0.0",
    "psycopg>=3",
    "pyyaml",
    "SQLAlchemy",
]

[project.urls]
Homepage = "https://github.com/bas-amop/PolarRoute-server"
Repository = "https://github.com/bas-amop/PolarRoute-server.git"
Issues = "https://github.com/bas-amop/PolarRoute-server/issues"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*"]

[tool.setuptools.package-data]
polarrouteserver = [
    "Makefile",
    "schema.yml",
]

[tool.setuptools.exclude-package-data]
polarrouteserver = [
    "*.sqlite3",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "pytest-celery",
    # "pytest-cov",
    "pytest-django",
    "ruff",
]
prod = [
    "gunicorn"
]
docs = [
    "mkdocs",
    "mkdocs-autoapi",
    "mkdocs-include-markdown-plugin",
    "mkdocstrings[python]",
]
build = [
    "build"
]
cov-badge = [
    "coverage-badge"
]

[project.scripts]
request_route = "polarrouteserver.demo:main"

[tool.ruff]
exclude = ["tests/*"]

[tool.ruff.lint.per-file-ignores]
"polarrouteserver/settings/*" = [
    "F403", # allow from .. import * in settings modules
    "F405", # allow defined in * imports in settings modules
    ] 

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "polarrouteserver.settings.test"
addopts = "--create-db"
filterwarnings =  "error::RuntimeWarning" # turn RuntimeWarnings into errors/test failures
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true
omit = [
    "polarrouteserver/settings/*",
    "polarrouteserver/route_api/migrations/*",
    "polarrouteserver/asgi.py",
    "polarrouteserver/demo.py",
    "polarrouteserver/urls.py",
    "polarrouteserver/wsgi.py",
    ]