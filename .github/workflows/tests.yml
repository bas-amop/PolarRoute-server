name: Run tests and linting
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "docs/**"
      - "mkdocs.yml"
      - "README.md"
      - "LICENSE"

  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "docs/**"
      - "mkdocs.yml"
      - "README.md"
      - "LICENSE"
  workflow_dispatch:

jobs:
  test:
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.14"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev]
    - name: Test with pytest
      run: pytest

  coverage:
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12 for coverage
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev,cov]
    - name: Test with pytest
      run: |
        pytest --cov=polarrouteserver | tee pytest-coverage.txt
    - name: Pytest coverage comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: MishaKav/pytest-coverage-comment@main
      with:
          pytest-coverage-path: ./pytest-coverage.txt

  lint:
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/ruff-action@v3
    - run: ruff check --fix
    - run: ruff format
    