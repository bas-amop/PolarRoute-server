openapi: 3.0.3
info:
  title: PolarRoute-Server
  version: 0.2.0
  description: Backend server for serving PolarRoute and MeshiPhi assets
paths:
  /api/route:
    post:
      operationId: api_route_request
      description: Entry point for route requests
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route-request'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-request-response'
          description: ''
  /api/route/{id}:
    get:
      operationId: api_route_retrieve
      description: Return status of route calculation and route itself if complete.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-status-response'
          description: ''
    delete:
      operationId: api_route_destroy
      description: Cancel route calculation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/recent_routes:
    get:
      operationId: api_recent_routes
      description: Return routes calculated within the last day.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/route-status-response'
          description: ''
      tags:
      - api

  /api/vehicle:
    post:
      operationId: api_vehicle_request
      description: |
        Creates a new vehicle. If a vehicle with the same `vessel_type` already exists,
        the `force_properties: true` flag must be set to update it.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vehicle-request'
        required: true
      responses:
        '200':
          description: Vehicle created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vehicle-request-response'
        '400':
          description: Invalid vehicle configuration
        '406':
          description: Duplicate vehicle created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vehicle-request-response'
        
    get:
      operationId: api_vehicle_list
      description: Retrieves all vehicles
      tags:
      - api
      responses:
        '200':
          description: A list of vehicle objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vehicle-retrieve'


  /api/vehicle/{vessel_type}:   
    get:
      operationId: api_vehicle_retrieve
      description: Entry point retrieving specific vehicle by vessel_type
      tags:
      - api
      parameters:
      - in: path
        name: vessel_type
        required: true
        schema:
          type: string
      responses:
        '200':
        description: Vehicle found
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#components/schemas/vehicle-retrieve'
        '404':
          description: Vehicle not found
    
    delete:
      operationId: api_vehicle_delete
      summary: Delete a vehicle by vessel_type
      tags:
      - api
      parameters:
        - in: path
          name: vessel_type
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Vehicle deleted successfully
        '404':
          description: Vehicle not found
    
  /api/vehicle/available:
    get:
      operationId: api_vehicle_available_list
      description: Returns a list of distinct `vessel_type` values currently in the database.
      responses:
        '200':
          description: List of distinct vessel types
          content:
            application/json:
              schema:
                type: object
                properties:
                  vessel_types:
                    type: array
                    items:
                      type: string
        '204':
          description: No available vessel types found
          content:
            application/json:
              schema:
                type: object
                properties:
                  vessel_types:
                    type: array
                    items:
                      type: string
                  message:
                    type: string
                    example: No available vessel types found.

  /api/mesh/{id}:
     get:
      operationId: api_mesh_get
      description: Get mesh.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mesh-response'
          description: ''
  /api/evaluate_route:
    post:
      operationId: api_route_evaluation
      description: Entry point for requests to evaluate a pre-existing GeoJSON route
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route-evaluation-request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route-evaluation-response'
          description: ''

components:
  schemas:
    route-request:
      type: object
      properties:
        start_lat:
          type: number
          format: double
        start_lon:
          type: number
          format: double
        end_lat:
          type: number
          format: double
        end_lon:
          type: number
          format: double
        force_recalculate:
          type: boolean
        start_name:
          type: string
        end_name:
          type: string
        mesh_id:
          type: integer
      required:
      - start_lat
      - start_lon
      - end_lat
      - end_lon
    route-request-response:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        status-url:
          type: string
          format: url
          nullable: false
        polarrouteserver-version:
          type: string
          nullable: false

    route-status-response:
      type: object
      properties:
        status:
          type: string
          nullable: false
        json:
          type: string
          nullable: true
        polar_route_version:
          type: string
          nullable: true
          maxLength: 60
        polarrouteserver-version:
          type: string
          nullable: false
    
    vehicle-request:
      type: object
      properties:
        vessel_type:
          type: string
        max_speed:
          type: number
          format: double
        unit:
          type: string
        max_ice_conc:
          type: number
          format: double
        min_depth:
          type: number
          format: double
        max_wave:
          type: number
          format: double
        excluded_zones:
          type: object
        neighbour_splitting:
          type: boolean
        beam:
          type: number
          format: double
        hull_type:
          type: string
        force_limit:
          type: number
          format: double
        force_properties:
          type: boolean
      required:
      - vessel_type
      - max_speed
      - unit

    vehicle-request-response:
      type: object
      properties:
        vessel_type:
          type: string
    
    vehicle-retrieve:
      type: object
      properties:
        vessel_type:
          type: string

    mesh-response:
      type: object
      properties:
        polarrouteserver-version:
          type: string
          nullable: false
        id: 
          type: integer
        json: 
          type: object
        geojson: 
          type: object
    
    route-evaluation-request:
      type: object
      properties:
        route:
          type: object
        custom_mesh_id:
          type: integer
      required:
      - route
    
    route-evaluation-response:
      type: object
      properties:
        polarrouteserver-version:
          type: string
          nullable: false
        route:
          type: object
        fuel:
          type: number
        time_hours:
          type: number
        time_str:
          type: string


