openapi: 3.0.3
info:
  title: PolarRoute-Server
  version: 0.2.0
  description: Backend server for serving PolarRoute and MeshiPhi assets
paths:
  /api/evaluate_route:
    post:
      operationId: api_route_evaluation
      description: Provides full logging of requests and responses
      tags:
      - evaluate_route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteEvaluationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RouteEvaluationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RouteEvaluationRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteEvaluationResponse'
          description: Route evaluated successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoMeshResponse'
          description: No matching mesh found.
  /api/mesh/{id}:
    get:
      operationId: api_mesh_get
      description: Provides full logging of requests and responses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mesh
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshDetailResponse'
          description: Mesh details retrieved successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoMeshResponse'
          description: No matching mesh found.
  /api/recent_routes:
    get:
      operationId: api_recent_routes_list
      description: Get recent routes
      tags:
      - recent_routes
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentRoutesResponse'
          description: List of recent routes retrieved successfully.
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponse'
          description: No content available.
  /api/route:
    post:
      operationId: api_route_create_request
      description: Entry point for route requests
      tags:
      - route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RouteCreationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RouteCreationRequest'
        required: true
      security:
      - {}
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteAcceptedResponse'
          description: Route calculation job accepted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad request - invalid input data or malformed request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoMeshResponse'
          description: No matching mesh found.
  /api/route/{id}:
    get:
      operationId: api_route_retrieve_status
      description: Return status of route calculation and route itself if complete.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - route
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteStatusResponse'
          description: Route status retrieved successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: Requested resource not found.
    delete:
      operationId: api_route_cancel_job
      description: Cancel route calculation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - route
      security:
      - {}
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: Request accepted for processing.
  /api/vehicle:
    get:
      operationId: api_vehicle_list_retrieve
      description: Retrieve all vehicles
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
          description: List of vehicles retrieved successfully.
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponse'
          description: No content available.
    post:
      operationId: api_vehicle_create_request
      description: Entry point to create vehicles
      tags:
      - vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: Vehicle operation completed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad request - invalid input data or malformed request.
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAcceptableResponse'
          description: Not acceptable - request conflicts with current resource state.
  /api/vehicle/{vessel_type}/:
    get:
      operationId: api_vehicle_retrieve_by_type
      description: Retrieve vehicle by vessel_type
      parameters:
      - in: path
        name: vessel_type
        schema:
          type: string
        required: true
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
          description: List of vehicles retrieved successfully.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: Requested resource not found.
    delete:
      operationId: api_vehicle_delete_by_type
      description: Delete vehicle by vessel_type
      parameters:
      - in: path
        name: vessel_type
        schema:
          type: string
        required: true
      tags:
      - vehicle
      security:
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponse'
          description: No content available.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: Requested resource not found.
  /api/vehicle/available:
    get:
      operationId: api_vehicle_available_list
      description: Endpoint to list all distinct vessel_types available.
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeListResponse'
          description: List of available vessel types retrieved successfully.
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponse'
          description: No content available.
components:
  schemas:
    AcceptedResponse:
      type: object
      properties:
        data:
          description: Response data for accepted request
      required:
      - data
    BadRequestResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong.
      required:
      - error
    MeshDetailResponse:
      type: object
      properties:
        polarrouteserver-version:
          type: string
          description: Server version
        id:
          type: string
          format: uuid
          description: Mesh ID
        json:
          description: Mesh JSON data
        geojson:
          description: Mesh GeoJSON data
      required:
      - geojson
      - id
      - json
      - polarrouteserver-version
    NoContentResponse:
      type: object
      properties:
        message:
          type: string
          description: Optional message describing the empty result.
    NoMeshResponse:
      type: object
      properties:
        info:
          type: object
          additionalProperties: {}
          description: Error message indicating no mesh found.
        status:
          type: string
          description: Status of the request (e.g., FAILURE).
      required:
      - info
      - status
    NotAcceptableResponse:
      type: object
      properties:
        info:
          type: object
          additionalProperties: {}
          description: Details about the conflict, including error message.
      required:
      - info
    NotFoundResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message indicating resource not found.
      required:
      - error
    RecentRoutesResponse:
      type: object
      properties:
        routes:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of recent routes with status information
      required:
      - routes
    RouteAcceptedResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Job ID for route calculation
        status-url:
          type: string
          format: uri
          description: URL to check job status
        polarrouteserver-version:
          type: string
          description: Server version
        info:
          type: object
          additionalProperties: {}
          description: Additional information
      required:
      - id
      - polarrouteserver-version
      - status-url
    RouteCreationRequest:
      type: object
      properties:
        start_lat:
          type: number
          format: double
          description: Starting latitude of the route.
        start_lon:
          type: number
          format: double
          description: Starting longitude of the route.
        end_lat:
          type: number
          format: double
          description: Ending latitude of the route.
        end_lon:
          type: number
          format: double
          description: Ending longitude of the route.
        start_name:
          type: string
          nullable: true
          description: Name of the start point.
        end_name:
          type: string
          nullable: true
          description: Name of the end point.
        mesh_id:
          type: string
          format: uuid
          nullable: true
          description: 'Optional: Custom mesh ID to use for route calculation.'
        force_recalculate:
          type: boolean
          default: false
          description: If true, forces recalculation even if an existing route is
            found.
      required:
      - end_lat
      - end_lon
      - start_lat
      - start_lon
    RouteEvaluationRequest:
      type: object
      properties:
        route:
          description: The route JSON to evaluate.
        custom_mesh_id:
          type: string
          format: uuid
          nullable: true
          description: 'Optional: Custom mesh ID to use for evaluation.'
      required:
      - route
    RouteEvaluationResponse:
      type: object
      properties:
        polarrouteserver-version:
          type: string
          description: Server version
        evaluation_results:
          type: object
          additionalProperties: {}
          description: Route evaluation results
      required:
      - evaluation_results
      - polarrouteserver-version
    RouteStatusResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Job ID
        status:
          type: string
          description: Job status
        polarrouteserver-version:
          type: string
          description: Server version
        start_lat:
          type: number
          format: double
        start_lon:
          type: number
          format: double
        end_lat:
          type: number
          format: double
        end_lon:
          type: number
          format: double
        start_name:
          type: string
          nullable: true
        end_name:
          type: string
          nullable: true
        info:
          type: object
          additionalProperties: {}
          description: Additional info or errors
      required:
      - end_lat
      - end_lon
      - end_name
      - id
      - polarrouteserver-version
      - start_lat
      - start_lon
      - start_name
      - status
    Vehicle:
      type: object
      properties:
        vessel_type:
          type: string
          maxLength: 150
        max_speed:
          type: number
          format: double
        unit:
          type: string
          maxLength: 150
        max_ice_conc:
          type: number
          format: double
          nullable: true
        min_depth:
          type: number
          format: double
          nullable: true
        max_wave:
          type: number
          format: double
          nullable: true
        excluded_zones:
          nullable: true
        neighbour_splitting:
          type: boolean
          nullable: true
        beam:
          type: number
          format: double
          nullable: true
        hull_type:
          type: string
          nullable: true
          maxLength: 150
        force_limit:
          type: number
          format: double
          nullable: true
      required:
      - max_speed
      - unit
    VehicleTypeListResponse:
      type: object
      properties:
        vessel_types:
          type: array
          items:
            type: string
          description: List of available vessel types.
      required:
      - vessel_types
