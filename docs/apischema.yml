openapi: 3.0.3
info:
  title: PolarRoute-Server
  version: 0.2.0
  description: Backend server for serving PolarRoute and MeshiPhi assets
paths:
  /api/evaluate_route:
    post:
      operationId: api_route_evaluation
      description: Provides full logging of requests and responses
      tags:
      - evaluate_route
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/mesh/{id}:
    get:
      operationId: api_mesh_get
      description: Provides full logging of requests and responses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - mesh
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/recent_routes:
    get:
      operationId: api_recent_routes_list
      description: Get recent routes
      tags:
      - recent_routes
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
  /api/route:
    post:
      operationId: api_route_create_request
      description: Entry point for route requests
      tags:
      - route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Route'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
  /api/route/{id}:
    get:
      operationId: api_route_retrieve_status
      description: Return status of route calculation and route itself if complete.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - route
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
    delete:
      operationId: api_route_cancel_job
      description: Cancel route calculation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - route
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/vehicle:
    get:
      operationId: api_vehicle_list_retrieve
      description: Retrieve all vehicles
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    post:
      operationId: api_vehicle_create_request
      description: Entry point to create vehicles
      tags:
      - vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleCreationSuccess'
          description: Vehicle created or updated successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleValidationError'
          description: Invalid input data for vehicle configuration.
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleExistsError'
          description: Pre-existing vehicle found, 'force_properties' not specified
            or not true.
  /api/vehicle/{vessel_type}/:
    get:
      operationId: api_vehicle_retrieve_by_type
      description: Retrieve vehicle by vessel_type
      parameters:
      - in: path
        name: vessel_type
        schema:
          type: string
        required: true
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    delete:
      operationId: api_vehicle_delete_by_type
      description: Delete vehicle by vessel_type
      parameters:
      - in: path
        name: vessel_type
        schema:
          type: string
        required: true
      tags:
      - vehicle
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/vehicle/available:
    get:
      operationId: api_vehicle_available_list
      description: Endpoint to list all distinct vessel_types available.
      tags:
      - vehicle
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VesselType'
          description: ''
components:
  schemas:
    Route:
      type: object
      properties:
        start_lat:
          type: number
          format: double
        start_lon:
          type: number
          format: double
        end_lat:
          type: number
          format: double
        end_lon:
          type: number
          format: double
        start_name:
          type: string
          nullable: true
          maxLength: 100
        end_name:
          type: string
          nullable: true
          maxLength: 100
        json:
          nullable: true
        json_unsmoothed:
          nullable: true
        polar_route_version:
          type: string
          nullable: true
          maxLength: 60
        info:
          nullable: true
        mesh:
          type: integer
          nullable: true
      required:
      - end_lat
      - end_lon
      - start_lat
      - start_lon
    Vehicle:
      type: object
      properties:
        vessel_type:
          type: string
          maxLength: 150
        max_speed:
          type: number
          format: double
        unit:
          type: string
          maxLength: 150
        max_ice_conc:
          type: number
          format: double
          nullable: true
        min_depth:
          type: number
          format: double
          nullable: true
        max_wave:
          type: number
          format: double
          nullable: true
        excluded_zones:
          nullable: true
        neighbour_splitting:
          type: boolean
          nullable: true
        beam:
          type: number
          format: double
          nullable: true
        hull_type:
          type: string
          nullable: true
          maxLength: 150
        force_limit:
          type: number
          format: double
          nullable: true
      required:
      - max_speed
      - unit
    VehicleCreationSuccess:
      type: object
      properties:
        vessel_type:
          type: string
          description: The type of vessel successfully created or updated.
      required:
      - vessel_type
    VehicleExistsError:
      type: object
      properties:
        info:
          type: object
          additionalProperties: {}
          description: Details about the conflict, indicating a pre-existing vehicle.
      required:
      - info
    VehicleValidationError:
      type: object
      properties:
        info:
          type: object
          additionalProperties: {}
          description: Details about the validation error, including the error message.
      required:
      - info
    VesselType:
      type: object
      properties:
        vessel_type:
          type: string
      required:
      - vessel_type
